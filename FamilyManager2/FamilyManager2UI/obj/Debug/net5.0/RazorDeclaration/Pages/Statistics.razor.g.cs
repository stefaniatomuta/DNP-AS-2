// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace FamilyManager2UI.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using FamilyManager2UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\_Imports.razor"
using FamilyManager2UI.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\Pages\Statistics.razor"
using Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\Pages\Statistics.razor"
using FamilyManager2UI.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\Pages\Statistics.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Statistics")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/Stats")]
    public partial class Statistics : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 116 "C:\Users\adria\DNP\DNP-AS-2\FamilyManager2\FamilyManager2UI\Pages\Statistics.razor"
       
    private IList<Family> families;
    private IList<Person> people;
    
    private IList<ChartData> sex;
    private IList<ChartData> ages;
    private IList<ChartData> hairColors;
    private IList<ChartData> eyeColors;
    private IList<ChartData> heights;
    private IList<ChartData> weights;

    private struct ChartData {
        public string Name { get; set; }
        public int Count { get; set; }
    }

    protected override async Task OnInitializedAsync() {
        families = Model.GetFamilies();
        people = Model.GetPeople();

        sex = new List<ChartData>();
        sex.Add(new ChartData() {
            Name = "Male",
            Count = people.Count(p => p.Sex.Equals("M"))
        });
        sex.Add(new ChartData() {
            Name = "Female",
            Count = people.Count(p => p.Sex.Equals("F"))
        });

        ages = new List<ChartData>();
        ages.Add(new ChartData() {
            Name = "<10",
            Count = people.Count(p => p.Age < 10)
        });
        ages.Add(new ChartData() {
            Name = "10-18",
            Count = people.Count(p => p.Age is >= 10 and < 19)
        });
        ages.Add(new ChartData() {
            Name = "19-27",
            Count = people.Count(p => p.Age is >= 19 and < 28)
        });
        ages.Add(new ChartData() {
            Name = "28-40",
            Count = people.Count(p => p.Age is >= 28 and < 41)
        });
        ages.Add(new ChartData() {
            Name = "41-55",
            Count = people.Count(p => p.Age is >= 41 and < 56)
        });
        ages.Add(new ChartData() {
            Name = ">55",
            Count = people.Count(p => p.Age > 55)
        });

        hairColors = new List<ChartData>();
        foreach (var color in Model.GetHairColors()) {
            hairColors.Add(new ChartData() {
                Name = color,
                Count = people.Count(p => p.HairColor.Equals(color))
            });
        }

        eyeColors = new List<ChartData>();
        foreach (var color in Model.GetEyeColors()) {
            eyeColors.Add(new ChartData() {
                Name = color,
                Count = people.Count(p => p.EyeColor.Equals(color))
            });
        }

        heights = new List<ChartData>();
        heights.Add(new ChartData() {
            Name = "<130",
            Count = people.Count(p => p.Height < 130)
        });
        heights.Add(new ChartData() {
            Name = "130-145",
            Count = people.Count(p => p.Height is >= 130 and < 146)
        });
        heights.Add(new ChartData() {
            Name = "146-160",
            Count = people.Count(p => p.Height is >= 146 and < 161)
        });
        heights.Add(new ChartData() {
            Name = "161-175",
            Count = people.Count(p => p.Height is >= 161 and < 176)
        });
        heights.Add(new ChartData() {
            Name = ">175",
            Count = people.Count(p => p.Height is > 175)
        });
        
        weights = new List<ChartData>();
        weights.Add(new ChartData() {
            Name = "<35",
            Count = people.Count(p => p.Weight < 35)
        });
        weights.Add(new ChartData() {
            Name = "35-49",
            Count = people.Count(p => p.Weight is <= 35 and < 50)
        });
        weights.Add(new ChartData() {
            Name = "50-65",
            Count = people.Count(p => p.Weight is >= 50 and < 66)
        });
        weights.Add(new ChartData() {
            Name = "66-80",
            Count = people.Count(p => p.Weight is >= 66 and < 81)
        });
        weights.Add(new ChartData() {
            Name = "81-95",
            Count = people.Count(p => p.Weight is >= 61 and < 96)
        });
        weights.Add(new ChartData() {
            Name = ">95",
            Count = people.Count(p => p.Weight > 95)
        });
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFamilyData Model { get; set; }
    }
}
#pragma warning restore 1591
